{"version":3,"file":"input.umd.js","sources":["../src/Vec2.js","../src/Input.js"],"sourcesContent":["export class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * Set members of the vector\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Assign members of the vector using another vector\r\n     *\r\n     * @param {Vec2} vec\r\n     */\r\n    assign(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clamp the vector to a min and a max vector\r\n     *\r\n     * @param {Vec2} min\r\n     * @param {Vec2} max\r\n     * @param {boolean} returnNew\r\n     */\r\n    clamp(min, max, returnNew = false) {\r\n        let clampedX = Math.max(Math.min(this.x, max.x), min.x);\r\n        let clampedY = Math.max(Math.min(this.y, max.y), min.y);\r\n        if (returnNew) {\r\n            return new Vec2(clampedX, clampedY);\r\n        } else {\r\n            this.set(clampedX, clampedY);\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n    get length() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Vec2} other\r\n     */\r\n    distance(other){\r\n        return Math.sqrt(Math.pow(this.x - other.x, 2) + Math.pow(this.y - other.y, 2));\r\n    }\r\n}\r\n","import {EventEmitter} from \"tiny-events\";\r\nimport {Vec2} from \"./Vec2\";\r\n\r\n/**\r\n * Input helper class\r\n *\r\n * @fires Input#movestart\r\n * @fires Input#move\r\n * @fires Input#moveend\r\n * @fires Input#dragstart\r\n * @fires Input#drag\r\n * @fires Input#dragend\r\n */\r\nexport class Input extends EventEmitter {\r\n    /**\r\n     * Input Helper\r\n     *\r\n     * @param {HTMLElement} element\r\n     */\r\n    constructor(element, options = {}) {\r\n        super();\r\n        this.element = element;\r\n\r\n        this.draggingThreshold = options.draggingThreshold || 10;\r\n        this.damper = options.damper || 0.2;\r\n        this.damperVelocity = options.damperVelocity || 0.05;\r\n        this.friction = options.friction || 0.25;\r\n\r\n        this._shouldUpdate = false;\r\n        this._dragging = false;\r\n        this._isMoving = false;\r\n        this.threshold = 0.001;\r\n        this.lastUpdate = Date.now() / 1000 * 60;\r\n\r\n        this.min = new Vec2(0, 0);\r\n        this.max = new Vec2(element.offsetWidth, element.offsetHeight);\r\n        this.startPosition = new Vec2(0, 0);\r\n        this.endPosition = new Vec2(0, 0);\r\n        this.deltaPosition = new Vec2(0, 0);\r\n        this.deltaTarget = new Vec2(0, 0);\r\n        this.stoppingPosition = new Vec2(0, 0);\r\n        this.target = new Vec2(0, 0);\r\n        this.position = new Vec2(0, 0);\r\n        this.acceleration = new Vec2(0, 0);\r\n        this.direction = new Vec2(0, 0);\r\n        this.velocity = new Vec2(0, 0);\r\n    }\r\n\r\n    set dragging(state) {\r\n        if (state && !this.dragging) {\r\n            this._dragging = state;\r\n            this.emit('dragstart');\r\n        }\r\n        if (!state && this.dragging) {\r\n            this._dragging = state;\r\n            this.emit('dragend');\r\n        }\r\n    }\r\n\r\n    get dragging() {\r\n        return this._dragging;\r\n    }\r\n\r\n    get shouldUpdate() {\r\n        return this._shouldUpdate;\r\n    }\r\n\r\n    set shouldUpdate(state) {\r\n        if (!state) {\r\n            this._shouldUpdate = state;\r\n            window.cancelAnimationFrame(this._raf)\r\n        }\r\n        ;\r\n\r\n        if (state && !this.shouldUpdate) {\r\n            this._shouldUpdate = state;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get isMoving() {\r\n        return this._isMoving;\r\n    }\r\n\r\n    set isMoving(state) {\r\n        if (state === this.isMoving) return;\r\n\r\n        if (state && !this.isMoving) {\r\n            this.emit('movestart');\r\n        }\r\n\r\n        if (!state && this.isMoving) {\r\n            this.emit('moveend');\r\n        }\r\n\r\n        this._isMoving = state;\r\n    }\r\n\r\n    update = () => {\r\n        if (this.shouldUpdate) this._raf = window.requestAnimationFrame(this.update);\r\n\r\n        const now = Date.now() / 1000 * 60;\r\n        const deltaTime = now - this.lastUpdate;\r\n        this.lastUpdate = now;\r\n\r\n        this.deltaPosition.set(\r\n            this.target.x - this.position.x,\r\n            this.target.y - this.position.y\r\n        );\r\n\r\n        this.direction.set(\r\n            this.deltaPosition.x > 0 ? 1 : this.deltaPosition.x < 0 ? -1 : this.direction.x,\r\n            this.deltaPosition.y > 0 ? 1 : this.deltaPosition.y < 0 ? -1 : this.direction.y\r\n        );\r\n\r\n        this.velocity.set(\r\n            this.deltaPosition.x / deltaTime,\r\n            this.deltaPosition.y / deltaTime\r\n        );\r\n\r\n        this.acceleration.set(\r\n            this.velocity.x / deltaTime,\r\n            this.velocity.y / deltaTime\r\n        );\r\n\r\n        let _damper;\r\n        if (this.dragging) {\r\n            _damper = 0.9;\r\n        } else {\r\n            _damper = this.damper;\r\n        }\r\n\r\n        if (Math.abs(this.position.x - this.target.x) <= this.threshold) {\r\n            this.position.x = this.target.x;\r\n        } else {\r\n            this.position.x += this.deltaPosition.x * _damper * deltaTime;\r\n        }\r\n\r\n        if (Math.abs(this.position.y - this.target.y) <= this.threshold) {\r\n            this.position.y = this.target.y;\r\n        } else {\r\n            this.position.y += this.deltaPosition.y * _damper * deltaTime;\r\n        }\r\n\r\n        if (this.position.distance(this.target) > 0) {\r\n            this.isMoving = true;\r\n        } else {\r\n            this.isMoving = false;\r\n        }\r\n    }\r\n\r\n    onStart = (evt) => {\r\n        const normalizedEvent = this.normalizeEvent(evt);\r\n        this.startPosition.set(normalizedEvent.x, normalizedEvent.y);\r\n        this.dragging = true;\r\n        this.shouldUpdate = true;\r\n    }\r\n\r\n    /**\r\n     * @param {TouchEvent} evt\r\n     */\r\n    onMove = (evt) => {\r\n        const normalizedEvent = this.normalizeEvent(evt);\r\n\r\n        if (this.dragging) {\r\n            this.target.set(normalizedEvent.x, normalizedEvent.y).clamp(this.min, this.max)\r\n            this.emit('drag');\r\n        }\r\n\r\n        this.emit('move');\r\n        this.shouldUpdate = true;\r\n    }\r\n\r\n    onEnd = () => {\r\n        this.stoppingPosition.set(\r\n            this.target.x + Math.pow(this.velocity.x, 2) / (2 * this.friction * 9.80) * this.direction.x,\r\n            this.target.y + Math.pow(this.velocity.y, 2) / (2 * this.friction * 9.80) * this.direction.y\r\n        );\r\n\r\n        this.target.assign(this.stoppingPosition).clamp(this.min, this.max);\r\n\r\n        this.dragging = false;\r\n    }\r\n\r\n    /**\r\n     * Normalize a mousevent or a touchevent\r\n     *\r\n     * @param {MouseEvent|TouchEvent} evt\r\n     */\r\n    normalizeEvent(evt) {\r\n        if (evt instanceof TouchEvent) {\r\n            return {\r\n                x: evt.touches[0].clientX,\r\n                y: evt.touches[0].clientY\r\n            }\r\n        } else if (evt instanceof MouseEvent) {\r\n            return {\r\n                x: evt.clientX,\r\n                y: evt.clientY\r\n            }\r\n        }\r\n    }\r\n\r\n    attach() {\r\n        this.element.addEventListener('touchstart', this.onStart, false);\r\n        this.element.addEventListener('touchmove', this.onMove, false);\r\n        this.element.addEventListener('touchend', this.onEnd, false);\r\n        this.element.addEventListener('mousedown', this.onStart, false);\r\n        this.element.addEventListener('mousemove', this.onMove, false);\r\n        this.element.addEventListener('mouseup', this.onEnd, false);\r\n    }\r\n\r\n    detach() {\r\n        this.element.removeEventListener('touchstart', this.onStart, false);\r\n        this.element.removeEventListener('touchmove', this.onMove, false);\r\n        this.element.removeEventListener('touchend', this.onEnd, false);\r\n        this.element.removeEventListener('mousedown', this.onStart, false);\r\n        this.element.removeEventListener('mousemove', this.onMove, false);\r\n        this.element.removeEventListener('mouseup', this.onEnd, false);\r\n    }\r\n}\r\n"],"names":["Vec2","x","y","this","set","assign","vec","clamp","min","max","returnNew","clampedX","Math","clampedY","distance","other","sqrt","pow","element","options","_this","update","shouldUpdate","_raf","window","requestAnimationFrame","_damper","now","Date","deltaTime","lastUpdate","deltaPosition","target","position","direction","velocity","acceleration","dragging","damper","abs","threshold","isMoving","onStart","evt","normalizedEvent","normalizeEvent","startPosition","onMove","emit","onEnd","stoppingPosition","friction","draggingThreshold","damperVelocity","_shouldUpdate","_dragging","_isMoving","offsetWidth","offsetHeight","endPosition","deltaTarget","TouchEvent","touches","clientX","clientY","MouseEvent","attach","addEventListener","detach","removeEventListener","state","cancelAnimationFrame","EventEmitter"],"mappings":"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"}