{"version":3,"file":"input.es.js","sources":["../src/Vec2.js","../src/Input.js"],"sourcesContent":["export class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * Set members of the vector\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Assign members of the vector using another vector\r\n     *\r\n     * @param {Vec2} vec\r\n     */\r\n    assign(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Clamp the vector to a min and a max vector\r\n     *\r\n     * @param {Vec2} min\r\n     * @param {Vec2} max\r\n     * @param {boolean} returnNew\r\n     */\r\n    clamp(min, max, returnNew = false) {\r\n        let clampedX = Math.max(Math.min(this.x, max.x), min.x);\r\n        let clampedY = Math.max(Math.min(this.y, max.y), min.y);\r\n        if (returnNew) {\r\n            return new Vec2(clampedX, clampedY);\r\n        } else {\r\n            this.set(clampedX, clampedY);\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n    get length() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Vec2} other\r\n     */\r\n    distance(other){\r\n        return Math.sqrt(Math.pow(this.x - other.x, 2) + Math.pow(this.y - other.y, 2));\r\n    }\r\n}\r\n","import {EventEmitter} from \"tiny-events\";\r\nimport {Vec2} from \"./Vec2\";\r\n\r\n/**\r\n * Input helper class\r\n *\r\n * @fires Input#movestart\r\n * @fires Input#move\r\n * @fires Input#moveend\r\n * @fires Input#dragstart\r\n * @fires Input#drag\r\n * @fires Input#dragend\r\n */\r\nexport class Input extends EventEmitter {\r\n    /**\r\n     * Input Helper\r\n     *\r\n     * @param {HTMLElement} element\r\n     */\r\n    constructor(element, options = {}) {\r\n        super();\r\n        this.element = element;\r\n\r\n        this.draggingThreshold = options.draggingThreshold || 10;\r\n        this.damper = options.damper || 0.2;\r\n        this.damperVelocity = options.damperVelocity || 0.05;\r\n        this.friction = options.friction || 0.25;\r\n\r\n        this._shouldUpdate = false;\r\n        this._dragging = false;\r\n        this._isMoving = false;\r\n        this.threshold = 0.001;\r\n        this.lastUpdate = Date.now() / 1000 * 60;\r\n\r\n        this.min = new Vec2(0, 0);\r\n        this.max = new Vec2(element.offsetWidth, element.offsetHeight);\r\n        this.startPosition = new Vec2(0, 0);\r\n        this.endPosition = new Vec2(0, 0);\r\n        this.deltaPosition = new Vec2(0, 0);\r\n        this.deltaTarget = new Vec2(0, 0);\r\n        this.stoppingPosition = new Vec2(0, 0);\r\n        this.target = new Vec2(0, 0);\r\n        this.position = new Vec2(0, 0);\r\n        this.acceleration = new Vec2(0, 0);\r\n        this.direction = new Vec2(0, 0);\r\n        this.velocity = new Vec2(0, 0);\r\n    }\r\n\r\n    set dragging(state) {\r\n        if (state && !this.dragging) {\r\n            this._dragging = state;\r\n            this.emit('dragstart');\r\n        }\r\n        if (!state && this.dragging) {\r\n            this._dragging = state;\r\n            this.emit('dragend');\r\n        }\r\n    }\r\n\r\n    get dragging() {\r\n        return this._dragging;\r\n    }\r\n\r\n    get shouldUpdate() {\r\n        return this._shouldUpdate;\r\n    }\r\n\r\n    set shouldUpdate(state) {\r\n        if (!state) {\r\n            this._shouldUpdate = state;\r\n            window.cancelAnimationFrame(this._raf)\r\n        }\r\n        ;\r\n\r\n        if (state && !this.shouldUpdate) {\r\n            this._shouldUpdate = state;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get isMoving() {\r\n        return this._isMoving;\r\n    }\r\n\r\n    set isMoving(state) {\r\n        if (state === this.isMoving) return;\r\n\r\n        if (state && !this.isMoving) {\r\n            this.emit('movestart');\r\n        }\r\n\r\n        if (!state && this.isMoving) {\r\n            this.emit('moveend');\r\n        }\r\n\r\n        this._isMoving = state;\r\n    }\r\n\r\n    update = () => {\r\n        if (this.shouldUpdate) this._raf = window.requestAnimationFrame(this.update);\r\n\r\n        const now = Date.now() / 1000 * 60;\r\n        const deltaTime = now - this.lastUpdate;\r\n        this.lastUpdate = now;\r\n\r\n        this.deltaPosition.set(\r\n            this.target.x - this.position.x,\r\n            this.target.y - this.position.y\r\n        );\r\n\r\n        this.direction.set(\r\n            this.deltaPosition.x > 0 ? 1 : this.deltaPosition.x < 0 ? -1 : this.direction.x,\r\n            this.deltaPosition.y > 0 ? 1 : this.deltaPosition.y < 0 ? -1 : this.direction.y\r\n        );\r\n\r\n        this.velocity.set(\r\n            this.deltaPosition.x / deltaTime,\r\n            this.deltaPosition.y / deltaTime\r\n        );\r\n\r\n        this.acceleration.set(\r\n            this.velocity.x / deltaTime,\r\n            this.velocity.y / deltaTime\r\n        );\r\n\r\n        let _damper;\r\n        if (this.dragging) {\r\n            _damper = 0.9;\r\n        } else {\r\n            _damper = this.damper;\r\n        }\r\n\r\n        if (Math.abs(this.position.x - this.target.x) <= this.threshold) {\r\n            this.position.x = this.target.x;\r\n        } else {\r\n            this.position.x += this.deltaPosition.x * _damper * deltaTime;\r\n        }\r\n\r\n        if (Math.abs(this.position.y - this.target.y) <= this.threshold) {\r\n            this.position.y = this.target.y;\r\n        } else {\r\n            this.position.y += this.deltaPosition.y * _damper * deltaTime;\r\n        }\r\n\r\n        if (this.position.distance(this.target) > 0) {\r\n            this.isMoving = true;\r\n        } else {\r\n            this.isMoving = false;\r\n        }\r\n    }\r\n\r\n    onStart = (evt) => {\r\n        const normalizedEvent = this.normalizeEvent(evt);\r\n        this.startPosition.set(normalizedEvent.x, normalizedEvent.y);\r\n        this.dragging = true;\r\n        this.shouldUpdate = true;\r\n    }\r\n\r\n    /**\r\n     * @param {TouchEvent} evt\r\n     */\r\n    onMove = (evt) => {\r\n        const normalizedEvent = this.normalizeEvent(evt);\r\n\r\n        if (this.dragging) {\r\n            this.target.set(normalizedEvent.x, normalizedEvent.y).clamp(this.min, this.max)\r\n            this.emit('drag');\r\n        }\r\n\r\n        this.emit('move');\r\n        this.shouldUpdate = true;\r\n    }\r\n\r\n    onEnd = () => {\r\n        this.stoppingPosition.set(\r\n            this.target.x + Math.pow(this.velocity.x, 2) / (2 * this.friction * 9.80) * this.direction.x,\r\n            this.target.y + Math.pow(this.velocity.y, 2) / (2 * this.friction * 9.80) * this.direction.y\r\n        );\r\n\r\n        this.target.assign(this.stoppingPosition).clamp(this.min, this.max);\r\n\r\n        this.dragging = false;\r\n    }\r\n\r\n    /**\r\n     * Normalize a mousevent or a touchevent\r\n     *\r\n     * @param {MouseEvent|TouchEvent} evt\r\n     */\r\n    normalizeEvent(evt) {\r\n        if (evt instanceof TouchEvent) {\r\n            return {\r\n                x: evt.touches[0].clientX,\r\n                y: evt.touches[0].clientY\r\n            }\r\n        } else if (evt instanceof MouseEvent) {\r\n            return {\r\n                x: evt.clientX,\r\n                y: evt.clientY\r\n            }\r\n        }\r\n    }\r\n\r\n    attach() {\r\n        this.element.addEventListener('touchstart', this.onStart, false);\r\n        this.element.addEventListener('touchmove', this.onMove, false);\r\n        this.element.addEventListener('touchend', this.onEnd, false);\r\n        this.element.addEventListener('mousedown', this.onStart, false);\r\n        this.element.addEventListener('mousemove', this.onMove, false);\r\n        this.element.addEventListener('mouseup', this.onEnd, false);\r\n    }\r\n\r\n    detach() {\r\n        this.element.removeEventListener('touchstart', this.onStart, false);\r\n        this.element.removeEventListener('touchmove', this.onMove, false);\r\n        this.element.removeEventListener('touchend', this.onEnd, false);\r\n        this.element.removeEventListener('mousedown', this.onStart, false);\r\n        this.element.removeEventListener('mousemove', this.onMove, false);\r\n        this.element.removeEventListener('mouseup', this.onEnd, false);\r\n    }\r\n}\r\n"],"names":["Vec2","constructor","x","y","this","set","assign","vec","clamp","min","max","returnNew","clampedX","Math","clampedY","length","sqrt","pow","distance","other","Input","EventEmitter","element","options","super","update","shouldUpdate","_raf","window","requestAnimationFrame","now","Date","deltaTime","lastUpdate","_damper","deltaPosition","target","position","direction","velocity","acceleration","dragging","damper","abs","threshold","isMoving","onStart","evt","normalizedEvent","normalizeEvent","startPosition","onMove","emit","onEnd","stoppingPosition","friction","draggingThreshold","damperVelocity","_shouldUpdate","_dragging","_isMoving","offsetWidth","offsetHeight","endPosition","deltaTarget","state","cancelAnimationFrame","TouchEvent","touches","clientX","clientY","MouseEvent","attach","addEventListener","detach","removeEventListener"],"mappings":"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"}