import{EventEmitter as t}from"tiny-events";class i{constructor(t=0,i=0){this.x=t,this.y=i}set(t,i){return this.x=t,this.y=i,this}assign(t){return this.x=t.x,this.y=t.y,this}clamp(t,s,e=!1){let h=Math.max(Math.min(this.x,s.x),t.x),n=Math.max(Math.min(this.y,s.y),t.y);return e?new i(h,n):(this.set(h,n),this)}get length(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))}distance(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}}class s extends t{constructor(t,s={}){super(),this.update=()=>{this.shouldUpdate&&(this._raf=window.requestAnimationFrame(this.update));const t=Date.now()/1e3*60,i=t-this.lastUpdate;let s;this.lastUpdate=t,this.deltaPosition.set(this.target.x-this.position.x,this.target.y-this.position.y),this.direction.set(this.deltaPosition.x>0?1:this.deltaPosition.x<0?-1:this.direction.x,this.deltaPosition.y>0?1:this.deltaPosition.y<0?-1:this.direction.y),this.velocity.set(this.deltaPosition.x/i,this.deltaPosition.y/i),this.acceleration.set(this.velocity.x/i,this.velocity.y/i),s=this.dragging?.9:this.damper,Math.abs(this.position.x-this.target.x)<=this.threshold?this.position.x=this.target.x:this.position.x+=this.deltaPosition.x*s*i,Math.abs(this.position.y-this.target.y)<=this.threshold?this.position.y=this.target.y:this.position.y+=this.deltaPosition.y*s*i,this.isMoving=this.position.distance(this.target)>0},this.onStart=t=>{const i=this.normalizeEvent(t);this.startPosition.set(i.x,i.y),this.dragging=!0,this.shouldUpdate=!0},this.onMove=t=>{const i=this.normalizeEvent(t);this.dragging&&(this.target.set(i.x,i.y).clamp(this.min,this.max),this.emit("drag")),this.emit("move"),this.shouldUpdate=!0},this.onEnd=()=>{this.stoppingPosition.set(this.target.x+Math.pow(this.velocity.x,2)/(2*this.friction*9.8)*this.direction.x,this.target.y+Math.pow(this.velocity.y,2)/(2*this.friction*9.8)*this.direction.y),this.target.assign(this.stoppingPosition).clamp(this.min,this.max),this.dragging=!1},this.element=t,this.draggingThreshold=s.draggingThreshold||10,this.damper=s.damper||.2,this.damperVelocity=s.damperVelocity||.05,this.friction=s.friction||.25,this._shouldUpdate=!1,this._dragging=!1,this._isMoving=!1,this.threshold=.001,this.lastUpdate=Date.now()/1e3*60,this.min=new i(0,0),this.max=new i(t.offsetWidth,t.offsetHeight),this.startPosition=new i(0,0),this.endPosition=new i(0,0),this.deltaPosition=new i(0,0),this.deltaTarget=new i(0,0),this.stoppingPosition=new i(0,0),this.target=new i(0,0),this.position=new i(0,0),this.acceleration=new i(0,0),this.direction=new i(0,0),this.velocity=new i(0,0)}set dragging(t){t&&!this.dragging&&(this._dragging=t,this.emit("dragstart")),!t&&this.dragging&&(this._dragging=t,this.emit("dragend"))}get dragging(){return this._dragging}get shouldUpdate(){return this._shouldUpdate}set shouldUpdate(t){t||(this._shouldUpdate=t,window.cancelAnimationFrame(this._raf)),t&&!this.shouldUpdate&&(this._shouldUpdate=t,this.update())}get isMoving(){return this._isMoving}set isMoving(t){t!==this.isMoving&&(t&&!this.isMoving&&this.emit("movestart"),!t&&this.isMoving&&this.emit("moveend"),this._isMoving=t)}normalizeEvent(t){return t instanceof TouchEvent?{x:t.touches[0].clientX,y:t.touches[0].clientY}:t instanceof MouseEvent?{x:t.clientX,y:t.clientY}:void 0}attach(){this.element.addEventListener("touchstart",this.onStart,!1),this.element.addEventListener("touchmove",this.onMove,!1),this.element.addEventListener("touchend",this.onEnd,!1),this.element.addEventListener("mousedown",this.onStart,!1),this.element.addEventListener("mousemove",this.onMove,!1),this.element.addEventListener("mouseup",this.onEnd,!1)}detach(){this.element.removeEventListener("touchstart",this.onStart,!1),this.element.removeEventListener("touchmove",this.onMove,!1),this.element.removeEventListener("touchend",this.onEnd,!1),this.element.removeEventListener("mousedown",this.onStart,!1),this.element.removeEventListener("mousemove",this.onMove,!1),this.element.removeEventListener("mouseup",this.onEnd,!1)}}export{s as Input};
//# sourceMappingURL=input.es.js.map
